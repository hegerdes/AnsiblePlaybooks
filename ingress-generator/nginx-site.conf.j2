# Conf for {{ nginx_vhost.host }}

{% if(nginx_vhost.upstreams | default([]) | length != 0) %}
# Upstream targets
    {% for upstream in nginx_vhost.upstreams | default([]) -%}
    {% if(upstream.targets | default([]) | length != 0) %}
    upstream {{ nginx_vhost.host }}{{ upstream.route | replace("/", "_") | replace(".", "-") if(upstream.route | default("default") != "default") else "_default" }} {
        {% for target in upstream.targets | default([]) -%}
            server {{ target }};
        {% endfor %}
    }
    {%- endif %}
    {%- endfor %}
{% endif %}


# Server
server {
    # Server-name will be domain name & aliasse if given
    server_name {{ nginx_vhost.host }};
    {{ "server_name _;" if (nginx_vhost.default | default("no") == "yes") }}
    {%- for alias in nginx_vhost.alias | default([]) -%}
        server_name {{ alias }};
    {% endfor %}

    # Sever settings for all sites
    {{ nginx_settings.common_server_settings | default("# None") | safe | indent(4) }}
    # Sever settings per site
    {{ nginx_vhost.nginx.server_settings | default("# None") | safe | indent(4) }}

    # ACME-challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/_letsencrypt;
    }

    # Locations
    {% for location in nginx_vhost.nginx.locations | default([]) %}
    # Custom locations
    location {{ location.route }} {
        {{ nginx_settings.common_header | safe | trim | indent(8) if (nginx_settings.common_header) }}
        {{ location.body | safe | indent(8) }}
    }
    {% endfor %}

{%- if nginx_vhost.nginx.locations | default([]) | length == 0 -%}
    {% if(nginx_vhost.upstreams | default([]) | length != 0) -%}
    # Autogenerated upstream locations
    {% for upstream in nginx_vhost.upstreams | default([]) %}
    location {{ "/" if (upstream.route | default("default") == "default") else upstream.route }} {
        {{ nginx_settings.common_header | safe | trim | indent(8) if (nginx_settings.common_header) }}
        proxy_pass http{{"s" if (nginx_vhost.tls_pass | default(false)) }}://{{ nginx_vhost.host }}{{ upstream.route | replace("/", "_") | replace(".", "-") + upstream.route if(upstream.route | default("default") != "default") else "_default/" }};
    }
        {% endfor %}
    {% endif %}
{% endif %}

    listen 443 ssl{{ " http2" if (nginx_settings.http2 | default("yes") == "yes") }}{{ " default_server" if (nginx_vhost.default | default("no") == "yes") }};
    ssl_certificate {{ nginx_vhost.tls.crt | default("/etc/letsencrypt/live/certs/fullchain.pem") }}; # managed by Certbot
    ssl_certificate_key {{ nginx_vhost.tls.key | default("/etc/letsencrypt/live/certs/privkey.pem") }}; # managed by Certbot
    {{ "include /etc/nginx/ssl/options-ssl-nginx.conf; # managed by Certbot" if(nginx_vhost.tls.use_default_ssl_options | default("yes")
    == "yes") }}
    ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem; # managed by Certbot

    # Shared sec settings
    include shared.conf/security.conf;
    # Shared server settings
    include shared.conf/general.conf;
}

{%- if nginx_vhost.tls.create_http | default("yes") | string == "yes" %}
# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name {{ nginx_vhost.host }};

    # ACME-challenge
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/_letsencrypt;
    }

    location / {
        return 301 https://{{ nginx_vhost.host }}$request_uri;
    }

    # Shared server settings
    include shared.conf/general.conf;
}
{% endif %}
