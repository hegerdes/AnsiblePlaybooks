FROM node:16-alpine as build

WORKDIR /app
COPY package.json /app/package.json
RUN npm install

# Copy base files
COPY . /app

# Add labes if build by CI
ARG COMMIT_HASH="none"
ARG COMMIT_TAG="none"
ENV COMMIT_HASH=$COMMIT_HASH
ENV COMMIT_TAG=$COMMIT_TAG
LABEL commit-hash=$COMMIT_HASH
LABEL commit-tag=$COMMIT_TAG
ENV TZ=Europe/Berlin
ENV USE_DOCKER=true


# For debugging
ENTRYPOINT [ "sh" ]

# Genarate config
RUN npm run generate-nginx ingress-hosts-nginx.yml

FROM nginx:1.20
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    bash cron certbot python3-certbot-nginx \
    && rm /etc/nginx/conf.d/*.conf \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/nginx /etc/nginx
RUN mv /etc/nginx/my-entrypoint.sh /my-entrypoint.sh \
    && mv /etc/nginx/certbot-renew /etc/cron.d/certbot-renew \
    && chmod 0644 /etc/cron.d/certbot-renew \
    && crontab /etc/cron.d/certbot-renew \
    && chmod +x /my-entrypoint.sh \
    && nginx -t

# Add labes if build by CI
ARG COMMIT_HASH="none"
ARG COMMIT_TAG="none"
ENV COMMIT_HASH=$COMMIT_HASH
ENV COMMIT_TAG=$COMMIT_TAG
LABEL commit-hash=$COMMIT_HASH
LABEL commit-tag=$COMMIT_TAG
ARG RUN_CERTBOT="yes"
ENV INGRESS_DEBUG="yes"
ENV RUN_CERTBOT=$RUN_CERTBOT

ENTRYPOINT [ "/my-entrypoint.sh" ]
