FROM node:16-alpine as build

WORKDIR /app
COPY package.json /app/package.json
RUN npm install --only=production

# Copy base files
COPY . /app

# Add labes if build by CI
ARG COMMIT_HASH="none"
ARG COMMIT_TAG="none"
ENV COMMIT_HASH=$COMMIT_HASH
ENV COMMIT_TAG=$COMMIT_TAG
LABEL commit-hash=$COMMIT_HASH
LABEL commit-tag=$COMMIT_TAG
ENV TZ=Europe/Berlin
ENV USE_DOCKER=true


# For debugging
ENTRYPOINT [ "sh" ]

# Genarate config
RUN npm run generate-nginx ingress-hosts-nginx.yml

FROM nginx:1.20
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    bash certbot python3-certbot-nginx \
    && rm /etc/nginx/conf.d/*.conf \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/nginx /etc/nginx
RUN mv /etc/nginx/nginx-entrypoint.sh /nginx-entrypoint.sh \
    && mkdir -p /etc/letsencrypt/live/certs \
    && cp /etc/nginx/ssl/dummy/*.pem /etc/letsencrypt/live/certs/ \
    && chmod +x /nginx-entrypoint.sh \
    && nginx -t \
    && rm /etc/letsencrypt/live/certs/*.pem

# Add labes if build by CI
ARG COMMIT_HASH="none"
ARG COMMIT_TAG="none"
ENV COMMIT_HASH=$COMMIT_HASH
ENV COMMIT_TAG=$COMMIT_TAG
LABEL commit-hash=$COMMIT_HASH
LABEL commit-tag=$COMMIT_TAG

# Certbot & debug
ENV NGINX_DEBUG="no"
ARG RUN_CERTBOT="no"
ENV RUN_CERTBOT=$RUN_CERTBOT
# Comma seperated domain list
ENV CERTBOT_DOMAINS="dev.devops-testing.123preview.com"

ENTRYPOINT [ "/nginx-entrypoint.sh"]
