# Main Docker deploy
---
- name: Stop App
  when: app_deploy_shutdown_command != "none"
  ansible.builtin.shell: '{{ app_deploy_shutdown_command }}'
  tags: [app-deploy]

- name: Debug
  ansible.builtin.debug:
    var: app_deploy_copy

- name: Synchronization of application compose|stack files
  become: false
  ansible.posix.synchronize:
    src: '{{ item.src_config_files }}'
    dest: '{{ item.dst_config_files }}'
    recursive: true
    use_ssh_args: true
    mode: push
    checksum: true
    rsync_opts: '{{ item.rsync_args | default([]) }}'
  loop: '{{ app_deploy_copy }}'
  loop_control:
    label: "Copy {{ item.src_config_files }} to {{ item.dst_config_files }}"
  tags: [app-deploy]

- name: Fix file permissions
  ansible.builtin.file:
    path: '{{ dst_config_files + item.name }}'
    owner: root
    group: root
    mode: '{{ item.mode | default("0644") }}'
  loop: '{{ app_deploy_file_permissions }}'
  tags: [app-deploy]

- name: Test Config
  when: app_deploy_test_command != "none"
  ansible.builtin.shell: '{{ app_deploy_test_command }}'
  register: app_deploy_test_res
  tags: [app-deploy]

- name: DEBUG
  ansible.builtin.debug:
    var: app_deploy_test_res

- name: Start App
  when: app_deploy_start_command != "none" and ((app_deploy_test_res.skipped is defined and app_deploy_test_res.skipped) or app_deploy_test_res.rc == 0)
  ansible.builtin.shell: '{{ app_deploy_start_command }}'
  register: app_deploy_test_res
  tags: [app-deploy]
