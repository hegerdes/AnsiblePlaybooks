# Install nginx-hosts and run certbot
---

- name: Verify Nginx is started
  service:
    name: nginx
    state: started

- name: Create directory for dummy certs
  file:
    path: /etc/letsencrypt/dummy
    state: directory

- name: Copy dummy cert 1
  copy:
    src: fullchain-dummy.pem
    dest: '/etc/letsencrypt/dummy/fullchain.pem'
    owner: root
    group: root
    mode: '0777'

- name: Copy dummy cert 2
  copy:
    src: privkey-dummy.pem
    dest: '/etc/letsencrypt/dummy/privkey.pem'
    owner: root
    group: root
    mode: '0777'

- name: Find all nginx hosts
  shell: |
    cd /etc/nginx/conf.d
    ls *.conf
  register: nginx_deployed_hosts
  changed_when: false

- name: Creating hosts for nginx
  when: nginx_vhost.host + ".conf" not in nginx_deployed_hosts.stdout_lines
  template:
    src: 'site.conf.j2'
    dest: '/etc/nginx/conf.d/{{ nginx_vhost.host }}.conf'
    mode: '0644'
  loop: '{{ nginx_vhosts }}'
  loop_control:
    loop_var: nginx_vhost
  notify: Reload nginx
  register: nginx_created_hosts

- name: Copy ssl-nginx.conf
  copy:
    src: options-ssl-nginx.conf
    dest: /etc/letsencrypt/options-ssl-nginx.conf
    owner: root
    group: root
    mode: '0644'

- name: Copy ssl-dhparams.pem
  copy:
    src: ssl-dhparams.pem
    dest: /etc/letsencrypt/ssl-dhparams.pem
    owner: root
    group: root
    mode: '0644'

- name: Verify Certbot Installation
  when: nginx_run_certbot | bool
  apt:
    name: '{{ item }}'
    state: latest
  loop: [ 'certbot', 'python3-certbot', 'python3-certbot-nginx']

- name: Run Certbot
  when: nginx_run_certbot | bool and nginx_created_hosts.changed
  command: 'certbot --nginx -d {{ nginx_vhost.host }} --agree-tos --non-interactive -m {{ nginx_certbot_mail }}'
  loop: '{{ nginx_vhosts }}'
  loop_control:
    loop_var: nginx_vhost

- name: Check nginx syntax
  when: nginx_run_certbot | bool
  command: nginx -t
  register: res
  changed_when: false
  failed_when: '"warn" is in res.stderr_lines or "emerg" is in res.stderr_lines or res.rc != 0'
