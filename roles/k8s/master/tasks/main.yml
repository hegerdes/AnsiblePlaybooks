# Main k8s Setup
---
- name: Check if kubeadm has already run
  when: groups.k8s_master | first == inventory_hostname
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca
  tags: [k8s, k8-init, k8-master-init]

- name: Init cluster if needed
  when: groups.k8s_master | first == inventory_hostname and not kubeadm_ca.stat.exists
  include_tasks: kubeadm-init.yml
  tags: [k8s, k8-init, k8-master-init]

- name: Enable and check kubelet service
  when: groups.k8s_master | first == inventory_hostname
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  tags: [k8s, k8-init, k8-master-init]

- name: Setup CNI
  when: groups.k8s_master | first == inventory_hostname
  include_tasks: setup-cni.yml
  tags: [k8s, k8-init, k8-master-init, k8-cri, k8-ingress]

- name: Get ControlPlane certificate-key
  when: groups.k8s_master | first == inventory_hostname and k8_cert_key == "none"
  command: kubeadm certs certificate-key
  register: auto_k8_cert_key
  run_once: true
  tags: [k8s, k8s-init, k8s-join]

- name: Debug - Print cert-key
  debug:
    var: k8_cert_key
  run_once: true
  tags: [k8s, k8-init, k8-master-init]

- name: Get ControlPlane join Command
  when: groups.k8s_master | first == inventory_hostname
  command: kubeadm token create --print-join-command
  register: tmp_k8_join_command
  run_once: true
  tags: [k8s, k8s-init, k8s-join]

- name: Setting join command for all master-nodes
  when: groups.k8s_master | first == inventory_hostname
  run_once: true
  set_fact:
    k8_cp_join_command: '{{ tmp_k8_join_command.stdout }} --control-plane --certificate-key {{ k8_cert_key if(k8_cert_key != "none") else auto_k8_cert_key.stdout }}'
  delegate_to: "{{ item }}"
  with_items: "{{ play_hosts }}"
  tags: [k8s, k8s-init, k8s-join]

- name: Debug - Print join command
  debug:
    var: k8_cp_join_command
  run_once: true
  tags: [k8s, k8-init, k8-master-init]

- name: Check if kubeadm has already run
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: k8s_kubeadm_all_init
  tags: [k8s, k8-init, k8s-join]

- name: Join ControlPlane nodes
  when: not k8s_kubeadm_all_init.stat.exists
  command: '{{ k8_cp_join_command }}'
  tags: [k8s, k8s-init, k8s-join]
  register: k8s_join_res

- name: Show join results
  debug:
    var: k8s_join_res
  tags: [k8s, k8-init, k8-master-init]

- name: Remove no NoSchedule taint form master nodes
  kubernetes.core.k8s_taint:
    kubeconfig: /etc/kubernetes/admin.conf
    state: absent
    name: '{{ ansible_facts.hostname }}'
    taints:
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: dedicated
  tags: [k8s, k8-init, k8-master-init, k8-taint]

- name: Setup configs
  include_tasks: setup-configs.yml
  tags: [k8s, k8-init, k8-master-init]

- name: Install Helm
  include_tasks: install-helm.yml
  tags: [k8s, k8s-init, k8s-helm]

# - name: Install Rancher
#   when: '"k8s_master" in group_names and k8s_install_helm'
#   include_tasks: setup-rancher.yml
#   run_once: true
#   tags: [k8s, k8-init, k8-master-init, k8-helm, k8s-monitor]

- name: Kubeadm check
  shell: kubectl cluster-info
  register: k8s_cluster_info
  tags: [k8s, k8s-prepare, k8s-base]

- name: Debug - Print cluser info
  debug:
    var: k8s_cluster_info.stderr_lines + k8s_cluster_info.stdout_lines
  run_once: true
  tags: [k8s, k8-init, k8-master-init]

# - name: Ensure handlers are notified now
#   meta: flush_handlers

