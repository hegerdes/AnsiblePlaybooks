# Install app stack
---
- name: Get the info on docker host
  docker_swarm_info:
  ignore_errors: yes
  register: swarm_info
  failed_when: 'not swarm_info.can_talk_to_docker'

- name: Copy APP compose|stack files
  copy:
    src: '{{ docker_deploy_src_config_files }}'
    dest: '{{ docker_deploy_dst_config_files }}'
    owner: root
    group: root

- name: Install pip3
  when: docker_deploy_use_swarm_mode | bool != true
  apt:
    name: python3-pip
    state: latest

# - name: Install compose package
#   when: docker_deploy_use_swarm_mode | bool != true
#   pip:
#     name: docker-compose

- name: Deploy app-services via compose
  when: docker_deploy_use_swarm_mode | bool != true
  docker_compose:
    project_name: '{{ docker_deploy_app_name }}'
    remove_orphans: yes
    project_src: '{{ docker_deploy_dst_config_files }}'
    files: '{{ mgmt_services_to_install | list }}'

- name: Init a new swarm
  when: docker_deploy_use_swarm_mode | bool and not swarm_info.docker_swarm_manager
  docker_swarm:
    advertise_addr: "{{ ansible_host }}"
    state: present

- name: Create absolut paths for stack files
  when: docker_deploy_use_swarm_mode | bool
  set_fact:
    mgmt_compose_files_stack: '{{ mgmt_compose_files_stack | default([]) + ["".join((docker_deploy_dst_config_files,item))] }}'
  loop: "{{ mgmt_services_to_install | list}}"

- name: Deploy mgmt-stack from a compose file
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  docker_stack:
    state: present
    name: '{{ docker_deploy_app_name }}'
    resolve_image: always
    with_registry_auth: yes
    compose: '{{ mgmt_compose_files_stack | list }}'

- name: Sleep for 45 seconds and continue with play
  wait_for:
    timeout: 45

- name: Shows stack info
  when: docker_deploy_use_swarm_mode | bool
  community.docker.docker_stack_info:
  register: mgmt_docker_stack_info

- name: Show stack info
  when: docker_deploy_use_swarm_mode | bool
  debug:
    var: mgmt_docker_stack_info.results

- name: Get info on Docker Swarm
  docker_swarm_info:
    nodes: yes
    services: yes
    tasks: yes
    ignore_errors: yes
  register: mgmt_docker_swarm_info

- name: Inform about swarm
  debug:
    var: mgmt_docker_swarm_info
