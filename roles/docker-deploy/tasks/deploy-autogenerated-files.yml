# Deploy auto generated files
---
- name: Check for auto generated files
  stat:
    path: '{{ item.file }}'
  loop: '{{ docker_deploy_generated_files }}'
  loop_control:
    label: '{{ item.file }}'
  register: docker_deploy_gen_files
  tags: [docker-deploy]

- name: Initial directory creation for generated files
  when: not item.stat.exists
  file:
    state: directory
    path: '{{ item.item.file | dirname }}'
  loop: '{{ docker_deploy_gen_files.results | default([]) }}'
  loop_control:
    label: '{{ item.item.file }}'
  tags: [docker-deploy]

- name: Initial copy for auto generated files
  when: not item.stat.exists
  copy:
    content: '{{ item.item.content }}'
    dest: '{{ item.item.file }}'
  loop: '{{ docker_deploy_gen_files.results | default([]) }}'
  loop_control:
    label: '{{ item.item.file }}'
  tags: [docker-deploy]

- name: Fix file permissions
  file:
    path: '{{ docker_deploy_dst_config_files + item.name }}'
    owner: root
    group: root
    mode: '{{ item.mode | default("0644") }}'
  loop: '{{ docker_deploy_file_permissions }}'
  tags: [docker-deploy]

- name: Deploy Apps via Docker-Service-CLI
  when: swarm_info.docker_swarm_manager and (docker_deploy_services | default([]) | length > 0 or docker_deploy_volumes | default([]) | length > 0 or docker_deploy_networks | default([]) | length > 0 )
  include_tasks: doploy-service.yml
  tags: [docker-deploy, docker-deploy-service]

- name: Deploy Apps via Docker-Compose-File
  when: swarm_info.docker_swarm_manager or not docker_deploy_use_swarm_mode
  include_tasks: deploy-stack.yml
  loop: '{{ docker_deploy_projects }}'
  loop_control:
    loop_var: docker_project
  tags: [docker-deploy, docker-deploy-stack]

- name: Get Stack Info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  community.docker.docker_stack_info:
  register: app_docker_stack_info
  tags: [docker-deploy]

- name: Get Info on Docker Swarm
  changed_when: false
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  command: docker service ls
  ignore_errors: true
  register: app_docker_swarm_info
  tags: [docker-deploy]

- name: Get Info on Docker Containers
  changed_when: false
  command: 'docker ps --format "table {{ "{{" }}.Status{{ "}}" }}\t{{ "{{" }}.RunningFor{{ "}}" }}\t{{ "{{" }} .Image{{ "}}" }}\t{{ "{{" }}.Names{{ "}}" }}"'
  ignore_errors: true
  register: app_docker_container_info
  tags: [docker-deploy]

- name: Show Stack info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  debug:
    var: app_docker_stack_info.results
  tags: [docker-deploy]

- name: Print Swarm Info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  debug:
    var: app_docker_swarm_info.stdout_lines
  ignore_errors: true
  tags: [docker-deploy]

- name: Show Container Info
  debug:
    var: app_docker_container_info.stdout_lines
  tags: [docker-deploy]
