# Install mgmt stack
---
- name: Checking proxy configuration
  fail:
    msg: Can not use Traefik and Nginx as proxy
  when: mgmt_use_nginx and mgmt_use_traefik
  tags: [mgmt, mgmt-stack]

- name: Install pip3
  apt:
    name: ['python3-pip', 'libffi-dev']
    state: latest
  tags: [mgmt, mgmt-stack]

- name: Install compose package
  when: mgmt_use_swarm_mode | bool != true
  pip:
    name: docker-compose
  tags: [mgmt, mgmt-stack]

- name: Copy MGMT compose|stack base files
  copy:
    src: 'srv/'
    dest: '{{ mgmt_dst_config_files }}'
    owner: root
    group: root
  tags: [mgmt, mgmt-stack, mgmt-nginx]

- name: Copy MGMT compose|stack custom files
  copy:
    src: '{{ mgmt_src_config_files }}'
    dest: '{{ mgmt_dst_config_files }}'
    owner: root
    group: root
  tags: [mgmt, mgmt-stack, mgmt-nginx]

- name: Configuring compose|stack files
  template:
    src: '{{ item }}.j2'
    dest: '{{ mgmt_dst_config_files }}/{{ item }}'
    mode: '0644'
  loop: '{{ mgmt_services_to_install }}'
  tags: [mgmt, mgmt-stack]


- name: Setting Grafana password
  no_log: true
  template:
    src: 'grafana.j2'
    dest: '{{ mgmt_dst_config_files }}/mgmt-grafana/grafana_admin_pw.txt'
    mode: '0644'
  tags: [mgmt, mgmt-stack]

- name: Init a new swarm
  when: mgmt_use_swarm_mode | bool
  docker_swarm:
    advertise_addr: '{{ ansible_host }}'
    state: present
  tags: [mgmt, mgmt-stack]

- name: Create network
  docker_network:
    name: '{{ mgmt_docker_stack_name }}_mgmt_net'
    driver: overlay
    attachable: yes
    driver_options:
      com.docker.network.driver.mtu: 1450

- name: Create absolut paths for stack files
  when: mgmt_use_swarm_mode | bool and item != "mgmt-stack-nginx.yml"
  set_fact:
    mgmt_compose_files_stack: '{{ mgmt_compose_files_stack | default([]) + ["".join((mgmt_dst_config_files,item))] }}'
  loop: '{{ mgmt_services_to_install | list}}'
  tags: [mgmt, mgmt-stack]

- name: Deploy mgmt-stack [via docker stack]
  when: mgmt_use_swarm_mode | bool
  docker_stack:
    state: present
    name: '{{ mgmt_docker_stack_name }}'
    resolve_image: always
    with_registry_auth: yes
    compose: '{{ mgmt_compose_files_stack | list }}'
  tags: [mgmt, mgmt-stack]

- name: Deploy mgmt-stack [via docker-compose]
  when: mgmt_use_swarm_mode | bool != true
  docker_compose:
    project_name: '{{ mgmt_docker_stack_name }}'
    remove_orphans: yes
    project_src: '{{ mgmt_dst_config_files }}'
    files: '{{ mgmt_services_to_install | list }}'
  tags: [mgmt, mgmt-stack]

- name: Setup Wireguard
  when: mgmt_use_wireguard | bool
  include_tasks: install-mgmt-stack-wireguard.yml
  tags: [mgmt, mgmt-stack, wireguard]

- name: Wait for containers to start
  wait_for:
    port: '{{ item }}'
    delay: 2
    timeout: 60
  loop: [9000, 3000]
  tags: [mgmt, mgmt-stack]

- name: Setup Nginx-Proxy
  when: mgmt_use_nginx
  include_tasks: install-mgmt-stack-nginx.yml
  tags: [mgmt, mgmt-stack, mgmt-nginx]

- name: Shows stack info
  community.docker.docker_stack_info:
  when: mgmt_use_swarm_mode | bool != true
  register: mgmt_docker_stack_info
  tags: [mgmt, mgmt-stack]

- name: Show stack info
  when: mgmt_use_swarm_mode | bool != true
  debug:
    var: mgmt_docker_stack_info.results
  tags: [mgmt, mgmt-stack]

