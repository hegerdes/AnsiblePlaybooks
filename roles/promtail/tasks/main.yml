# Install Promtail
---
- name: Check if promtail is setup
  ansible.builtin.command: "promtail --version"
  register: promtail_check_result
  changed_when: false
  failed_when: false
  tags: [promtail, monitoring]

- name: Get promtail URL
  when: promtail_check_result.stdout == ""
  ansible.builtin.shell: |
    curl --silent https://api.github.com/repos/grafana/loki/releases/latest | grep browser_download_url | cut -d '"' -f 4 | grep promtail-linux-amd
  register: promtail_url
  tags: [promtail, monitoring]

- name: Download and unzip promtail
  when: promtail_check_result.stdout == ""
  unarchive:
    src: '{{ promtail_url.stdout }}'
    dest: /tmp
    remote_src: true
  tags: [promtail, monitoring]

- name: Install promtail
  when: promtail_check_result.stdout == ""
  ansible.builtin.shell: |
    mv /tmp/promtail-linux-* /usr/local/bin/promtail
  notify: Restart promtail
  tags: [promtail, monitoring]

- name: Test promtail
  ansible.builtin.command: "promtail --version"
  changed_when: false
  tags: [promtail, monitoring]

- name: Add Promtail user
  user:
    name: promtail
    comment: User for Promtail log-shipper
    group: adm
    ansible.builtin.shell: /usr/sbin/nologin
    create_home: false
    system: true
    state: present
  tags: [promtail, monitoring]

- name: Copy promtail service config
  ansible.builtin.template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: '0644'
  notify: Restart promtail
  tags: [promtail, monitoring]

- name: Ensue config folder exists
  ansible.builtin.file:
    path: '{{ promtail_config_dst_path | dirname }}'
    state: directory
  tags: [promtail, monitoring]

- name: Copy Promtail config
  ansible.builtin.copy:
    src: '{{ promtail_config_src_path }}'
    dest: '{{ promtail_config_dst_path }}'
    owner: root
    group: root
    mode: '0666'
  notify: Restart promtail
  tags: [promtail, monitoring]

- name: Enable Promtail service
  ansible.builtin.systemd:
    name: promtail.service
    state: started
    daemon_reload: true
    enabled: true
  notify: Restart promtail
  tags: [promtail, monitoring]

- name: Verify Promtail status
  ansible.builtin.service:
    name: promtail
    state: restarted
  tags: [promtail, monitoring]

- name: Ensure handlers are notified now
  ansible.builtin.meta: flush_handlers
  tags: [promtail, monitoring]
